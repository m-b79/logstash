input {
 beats {
 port => 5044
 }
}

 filter {
 if [type] == "nginx" and [input_type] == "access" {
 grok {
 match => [ "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}"]
 overwrite => [ "message" ]
 }

mutate {
 convert => ["response", "integer"]
 convert => ["bytes", "integer"]
 convert => ["responsetime", "float"]
 }

geoip {
 source => "clientip"
 target => "geoip"
 add_tag => [ "nginx-geoip" ]
 }

date {
 match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
 remove_field => [ "timestamp" ]
 }

useragent {
 source => "agent"
 }
 } else if [type] == "nginx" and [input_type] == "error" {
 grok {
 match => [ "message" , "(?%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}(?:, client: (?%{IP}|%{HOSTNAME}))(?:, server: (%{IPORHOST:server})?)(?:, request: %{QS:request})?(?:, upstream: \"%{URI:upstream}\")?(?:, host: %{QS:host})?(?:, referrer: \"%{URI:referrer}\")?"]
 overwrite => [ "message" ]
 }

geoip {
 source => "client"
 target => "geoip"
 add_tag => [ "nginx-geoip" ]
 }

date {
 match => [ "timestamp" , "YYYY/MM/dd HH:mm:ss" ]
 remove_field => [ "timestamp" ]
 }
 } else if [type] == "linux" and [input_type] == "syslog" {
 grok {
 match => { "message" => "%{SYSLOGLINE}" }
 overwrite => [ "message" ]
 }
 }
 }

output {
 elasticsearch {
   hosts => ["http://192.168.0.1:9200"]
   user => "elastic"
   password => "Root2021"
   ilm_rollover_alias => "logstash"
   ilm_pattern => "000001"
 }
}
